/**
 * BuscadorAutomovilesForm.java
 * 27 mar. 2023 16:11:35
 *
 */
package org.itson.presentacion;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.itson.dominio.Vehiculo;
import org.itson.dominio.Persona;
import org.itson.dominio.Placa;
import org.itson.servicio.PlacaServicio;
import org.itson.servicio.PersonaServicio;
import org.itson.servicio.VehiculoServicio;
import org.itson.utils.ConfiguracionDePaginado;

/**
 * Descripción de la clase:
 *
 * @author Daniel Armando Peña Garcia ID:229185
 */
public class BuscadorAutomovilesForm extends javax.swing.JFrame {

    private PlacaServicio placaDAO;
    private PersonaServicio personaDAO;
    private VehiculoServicio vehiculoDAO;
    private SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
    private Persona persona;
    private Placa placaAnterior;
    private Vehiculo vehiculo;
    private boolean salir;
    private ConfiguracionDePaginado paginado = new ConfiguracionDePaginado(1, 20);

    /**
     *
     * Constructor for BuscadorAutomovilesForm class. Initializes components and
     * initializes DAO services for Placa, Persona, and Vehiculo. Also calls the
     * method buscarPlacas() to populate the form with the list of available
     * license plates.
     */
    public BuscadorAutomovilesForm() {
        initComponents();
        this.placaDAO = new PlacaServicio();
        this.personaDAO = new PersonaServicio();
        this.vehiculoDAO = new VehiculoServicio();
        this.buscarPlacas();
    }

    /**
     *
     * Carga los datos de los vehículos en la tabla de la interfaz gráfica.
     */
    public void cargarTablaVehiculo() {
        DefaultTableModel modeloTabla = (DefaultTableModel) this.tblVehiculos.getModel();
        for (Object[] resultados : placaDAO.consultarPlacasPersonas()) {
            Calendar calendar = (Calendar) resultados[5];
            Date fecha = calendar.getTime();
            String fechaFormat = formatoFecha.format(fecha);
            resultados[5] = fechaFormat;
            modeloTabla.addRow(resultados);
        }
    }

    /**
     *
     * Método que realiza la búsqueda de placas de vehículos según el filtro de
     * búsqueda ingresado en el campo de texto 'txtPlacas' y actualiza la tabla
     * de resultados con los resultados obtenidos. Se utiliza un objeto
     * 'paginado' para controlar la paginación de los resultados.
     */
    public void buscarPlacas() {

        DefaultTableModel modeloTabla = (DefaultTableModel) this.tblVehiculos.getModel();
        //Limpia tabla anterior
        modeloTabla.setRowCount(0);
        System.out.println(this.txtPlacas.getText().trim());
        for (Object[] resultados : placaDAO.consultarPlacasPersonasFiltroPaginado(this.txtPlacas.getText().trim(), paginado)) {
            Calendar calendar = (Calendar) resultados[5];
            Date fecha = calendar.getTime();
            String fechaFormat = formatoFecha.format(fecha);
            resultados[5] = fechaFormat;
            modeloTabla.addRow(resultados);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVehiculos = new javax.swing.JTable();
        btnAceptar = new javax.swing.JButton();
        txtPlacas = new javax.swing.JFormattedTextField();
        btnAvanzar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Buscador de Vehículos");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 102, 255));

        jLabel1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Buscador de Vehículos:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(916, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLabel2.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Placas: ");

        tblVehiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Placa", "Placas", "Estado", "ID Vehiculo", "Número de Serie", "Fecha de Excepción", "ID Persona", "Nombre", "Teléfono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVehiculos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVehiculosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblVehiculos);
        if (tblVehiculos.getColumnModel().getColumnCount() > 0) {
            tblVehiculos.getColumnModel().getColumn(0).setResizable(false);
            tblVehiculos.getColumnModel().getColumn(0).setPreferredWidth(35);
            tblVehiculos.getColumnModel().getColumn(1).setResizable(false);
            tblVehiculos.getColumnModel().getColumn(2).setResizable(false);
            tblVehiculos.getColumnModel().getColumn(3).setResizable(false);
            tblVehiculos.getColumnModel().getColumn(3).setPreferredWidth(110);
            tblVehiculos.getColumnModel().getColumn(4).setResizable(false);
            tblVehiculos.getColumnModel().getColumn(5).setResizable(false);
        }

        btnAceptar.setBackground(new java.awt.Color(255, 255, 255));
        btnAceptar.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btnAceptar.setForeground(new java.awt.Color(0, 0, 0));
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        txtPlacas.setBackground(new java.awt.Color(255, 255, 255));
        txtPlacas.setForeground(new java.awt.Color(0, 0, 0));
        try {
            txtPlacas.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("UUU-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtPlacas.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        txtPlacas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlacasActionPerformed(evt);
            }
        });
        txtPlacas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPlacasKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPlacasKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPlacasKeyTyped(evt);
            }
        });

        btnAvanzar.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btnAvanzar.setText(">");
        btnAvanzar.setBorderPainted(false);
        btnAvanzar.setContentAreaFilled(false);
        btnAvanzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvanzarActionPerformed(evt);
            }
        });

        btnRegresar.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btnRegresar.setText("<");
        btnRegresar.setBorderPainted(false);
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(3, 3, 3)
                        .addComponent(txtPlacas, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAceptar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAvanzar)
                    .addComponent(btnRegresar))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtPlacas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAceptar)))
                        .addGap(147, 147, 147))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(btnAvanzar)
                        .addGap(168, 168, 168)
                        .addComponent(btnRegresar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     *
     * Este método se encarga de buscar las placas en la tabla de vehículos,
     * dependiendo del filtro ingresado en el campo de texto "txtPlacas".
     * Utiliza el método "consultarPlacasPersonasFiltroPaginado" de la clase
     * PlacaServicio para obtener los resultados de la búsqueda, y los muestra
     * en la tabla de vehículos.
     */
    private void txtPlacasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacasKeyTyped
        // TODO add your handling code here:
        this.buscarPlacas();
    }//GEN-LAST:event_txtPlacasKeyTyped

    /**
     *
     * Método que se encarga de manejar el evento "MouseClicked" del JTable
     * "tblVehiculos". Al seleccionar una fila de la tabla, se obtienen los
     * datos de la persona, la placa anterior y el vehículo seleccionados y se
     * guardan en las variables correspondientes.
     *
     * @param evt Objeto que contiene la información del evento.
     */
    private void tblVehiculosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVehiculosMouseClicked
        // TODO add your handling code here:
        int seleccionar = tblVehiculos.rowAtPoint(evt.getPoint());
        String idString = String.valueOf(tblVehiculos.getValueAt(seleccionar, 6));
        Long idLong = Long.valueOf(idString);
        Persona personaSeleccionada = new Persona();
        personaSeleccionada.setIdPersona(idLong);
        this.persona = personaDAO.consultarPersona(personaSeleccionada);
        // JOptionPane.showMessageDialog(null, persona.toString());

        idString = String.valueOf(tblVehiculos.getValueAt(seleccionar, 0));
        idLong = Long.valueOf(idString);
        Placa placaSeleccionada = new Placa();
        placaSeleccionada.setIdTramite(idLong);
        this.placaAnterior = placaDAO.consultarPlaca(placaSeleccionada);
        // JOptionPane.showMessageDialog(null, placaAnterior.toString());

        idString = String.valueOf(tblVehiculos.getValueAt(seleccionar, 3));
        idLong = Long.valueOf(idString);
        Vehiculo vehiculoSeleccionado = new Vehiculo();
        vehiculoSeleccionado.setIdVehiculo(idLong);
        this.vehiculo = vehiculoDAO.consultarVehiculo(vehiculoSeleccionado);
        // JOptionPane.showMessageDialog(null, vehiculo.toString());
    }//GEN-LAST:event_tblVehiculosMouseClicked

    /**
     *
     * Abre la ventana para actualizar las placas del vehículo seleccionado, si
     * hay uno seleccionado.
     *
     * Si no hay un vehículo seleccionado, muestra un mensaje de error.
     */
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed

        if (this.vehiculo != null) {
            ActualizarPlacasForm actualizarPlacas = new ActualizarPlacasForm(vehiculo, placaAnterior);
            actualizarPlacas.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this,
                    "No has seleccionado ningún vehículo", "Error!",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    /**
     *
     * Método que se llama cuando se presiona la tecla "Enter" en el campo de
     * texto "txtPlacas". Ejecuta el método "buscarPlacas()" para realizar la
     * búsqueda de placas y actualizar la tabla de vehículos.
     *
     * @param evt El evento de acción que se produce al presionar la tecla
     * "Enter".
     */
    private void txtPlacasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlacasActionPerformed
        this.buscarPlacas();
    }//GEN-LAST:event_txtPlacasActionPerformed

    /**
     *
     * Este método se ejecuta cuando se presiona una tecla en el campo de texto
     * "txtPlacas". Llama al método "buscarPlacas" para actualizar la tabla de
     * vehículos según el texto ingresado.
     *
     * @param evt el evento de teclado generado al presionar una tecla
     */
    private void txtPlacasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacasKeyPressed
        this.buscarPlacas();
    }//GEN-LAST:event_txtPlacasKeyPressed

    /**
     *
     * Actualiza la búsqueda de placas cuando se suelta una tecla en el campo de
     * texto de placas. Llama al método buscarPlacas() para realizar la búsqueda
     * actualizada.
     *
     * @param evt El evento de soltar una tecla en el campo de texto de placas.
     */
    private void txtPlacasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacasKeyReleased
        this.buscarPlacas();
    }//GEN-LAST:event_txtPlacasKeyReleased

    /**
     *
     * Método que se ejecuta al cerrar la ventana y muestra una ventana de
     * confirmación para preguntar si el usuario está seguro de que quiere
     * salir. Si el usuario confirma la salida, se cierra la ventana y se
     * regresa a la pantalla principal. Si el usuario cancela la salida, se
     * evita que se cierre la ventana.
     *
     * @param evt El evento que dispara la acción.
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int confirmacion = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que quieres salir?", "Confirmar salida", JOptionPane.YES_NO_OPTION);
        if (confirmacion == JOptionPane.YES_OPTION) {
            // Si el usuario confirma la salida, puedes permitir que el marco se cierre
            this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            regresarPantallaPrincipal();
        } else {
            // Si el usuario cancela la salida, evita que el marco se cierre
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     *
     * Avanza una página en la tabla de resultados de búsqueda de placas y
     * vuelve a cargar los resultados actualizados.
     *
     * @param evt Evento de acción generado por el botón "Avanzar".
     */
    private void btnAvanzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvanzarActionPerformed
        // TODO add your handling code here:
        paginado.avanzarPagina();
        this.buscarPlacas();
    }//GEN-LAST:event_btnAvanzarActionPerformed

    /**
     *
     * Método que se ejecuta al presionar el botón "Regresar" para retroceder
     * una página en la tabla de resultados de búsqueda. Actualiza la página
     * actual y vuelve a ejecutar la búsqueda de placas.
     *
     * @param evt el evento de acción que se produce al hacer clic en el botón
     * "Regresar".
     */
    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        paginado.retrocederPagina();
        this.buscarPlacas();
    }//GEN-LAST:event_btnRegresarActionPerformed

    /**
     * Método para regresar a la pantalla principal del sistema.
     */
    private void regresarPantallaPrincipal() {
        PrincipalForm principal = new PrincipalForm();
        principal.setVisible(true);
        dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAvanzar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblVehiculos;
    private javax.swing.JFormattedTextField txtPlacas;
    // End of variables declaration//GEN-END:variables

}
