/**
 * RegistrarAutoForm.java
 * 29 mar. 2023 15:40:59
 *
 */
package org.itson.presentacion;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import org.itson.dominio.Placa;
import org.itson.dominio.Vehiculo;
import org.itson.servicio.PlacaServicio;
import org.itson.servicio.VehiculoServicio;

/**
 * Descripción de la clase: Esta clase se encarga de mostrar el formulario para
 * registrar vehículo
 *
 * @author Daniel Armando Peña Garcia ID:229185
 * @author Daniel Omar Alameda López ID: 228343
 */
public class RegistrarVehiculoForm extends javax.swing.JFrame {

    private Vehiculo vehiculo;
    private Placa placasAntiguas;
    private VehiculoServicio vehiculoDAO = new VehiculoServicio();
    private PlacaServicio placaDAO = new PlacaServicio();

    /**
     * Constructor vacio de la pantalla registrar vehiculo
     */
    public RegistrarVehiculoForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblDatosVehiculo = new javax.swing.JLabel();
        lblNumeroSerie = new javax.swing.JLabel();
        lblModelo = new javax.swing.JLabel();
        lblMarca = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        lblLinea = new javax.swing.JLabel();
        txtLinea = new javax.swing.JTextField();
        lblColor = new javax.swing.JLabel();
        txtColor = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        formatNumeroSerie = new javax.swing.JFormattedTextField();
        formatModelo = new javax.swing.JFormattedTextField();

        setTitle("Registrar Vehículo");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 120, 250));

        jLabel1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Registrar Vehículo");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblDatosVehiculo.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        lblDatosVehiculo.setForeground(new java.awt.Color(0, 0, 0));
        lblDatosVehiculo.setText("Datos del Vehículo");

        lblNumeroSerie.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        lblNumeroSerie.setForeground(new java.awt.Color(0, 0, 0));
        lblNumeroSerie.setText("Número de Serie:");

        lblModelo.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        lblModelo.setForeground(new java.awt.Color(0, 0, 0));
        lblModelo.setText("Modelo:");

        lblMarca.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        lblMarca.setForeground(new java.awt.Color(0, 0, 0));
        lblMarca.setText("Marca:");

        txtMarca.setBackground(new java.awt.Color(255, 255, 255));
        txtMarca.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        txtMarca.setForeground(new java.awt.Color(0, 0, 0));
        txtMarca.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtMarca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMarcaFocusGained(evt);
            }
        });

        lblLinea.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        lblLinea.setForeground(new java.awt.Color(0, 0, 0));
        lblLinea.setText("Línea:");

        txtLinea.setBackground(new java.awt.Color(255, 255, 255));
        txtLinea.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        txtLinea.setForeground(new java.awt.Color(0, 0, 0));
        txtLinea.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        lblColor.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        lblColor.setForeground(new java.awt.Color(0, 0, 0));
        lblColor.setText("Color:");

        txtColor.setBackground(new java.awt.Color(255, 255, 255));
        txtColor.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        txtColor.setForeground(new java.awt.Color(0, 0, 0));
        txtColor.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtColorActionPerformed(evt);
            }
        });

        btnRegistrar.setBackground(new java.awt.Color(255, 255, 255));
        btnRegistrar.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btnRegistrar.setForeground(new java.awt.Color(0, 0, 0));
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        formatNumeroSerie.setBackground(new java.awt.Color(255, 255, 255));
        formatNumeroSerie.setForeground(new java.awt.Color(0, 0, 0));
        try {
            formatNumeroSerie.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("UUU-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        formatNumeroSerie.setToolTipText("");
        formatNumeroSerie.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        formatNumeroSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatNumeroSerieActionPerformed(evt);
            }
        });
        formatNumeroSerie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formatNumeroSerieKeyTyped(evt);
            }
        });

        formatModelo.setBackground(new java.awt.Color(255, 255, 255));
        formatModelo.setForeground(new java.awt.Color(0, 0, 0));
        try {
            formatModelo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        formatModelo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        formatModelo.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        formatModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatModeloActionPerformed(evt);
            }
        });
        formatModelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formatModeloKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblDatosVehiculo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRegistrar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNumeroSerie)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                        .addComponent(formatNumeroSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblColor)
                            .addComponent(lblLinea)
                            .addComponent(lblModelo)
                            .addComponent(lblMarca))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMarca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(txtLinea, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(txtColor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(formatModelo, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDatosVehiculo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumeroSerie)
                    .addComponent(formatNumeroSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMarca)
                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLinea)
                    .addComponent(txtLinea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModelo)
                    .addComponent(formatModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblColor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegistrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    /**
     * Evento cuando se desee salir de la ventana
     *
     * @param evt evento al accionar la salida de la ventanas
     */
    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        int cancelarTodo = JOptionPane.showConfirmDialog(this,
                "¿Seguro(a) que deseas salir?"
                + "\nSe cancelará todo el proceso",
                "¡Peligro!",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (JOptionPane.YES_OPTION == cancelarTodo) {
            dispose();
        } else {
            this.setVisible(true);
        }
    }//GEN-LAST:event_formComponentHidden

    /**
     *
     * Método que se activa al hacer clic en el botón "Registrar". Valida los
     * campos de texto y, si están vacíos, verifica si el vehículo ya está
     * registrado. Si no está registrado, abre una ventana para registrar las
     * primeras placas. Si el vehículo ya está registrado, muestra un mensaje de
     * advertencia y abre una ventana para actualizar las placas.
     *
     * @param evt El evento de acción del botón
     */
    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        if (validarCamposTexto().isEmpty()) {
            if (!validarAutoRegistrado()) {
                PrimerasPlacasForm primerasPlacas = new PrimerasPlacasForm(vehiculo);
                primerasPlacas.setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Ya hay un auto registrado "
                        + "con placas activas\n"
                        + " Procederemos a actualizar las placas", "Seguimiento",
                        JOptionPane.WARNING_MESSAGE);
                ActualizarPlacasForm actualizar = new ActualizarPlacasForm(vehiculo, placasAntiguas);
                actualizar.setVisible(true);
                this.dispose();
            }
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void formatNumeroSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatNumeroSerieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formatNumeroSerieActionPerformed

    /**
     *
     * Método que se activa cuando se cierra la ventana. Muestra una ventana de
     * confirmación para verificar si el usuario realmente quiere salir. Si el
     * usuario confirma la salida, se permite que el marco se cierre y se
     * regresa a la pantalla principal. Si el usuario cancela la salida, se
     * evita que el marco se cierre.
     *
     * @param evt El evento de ventana que se activa cuando se cierra la
     * ventana.
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int confirmacion = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que quieres salir?", "Confirmar salida", JOptionPane.YES_NO_OPTION);
        if (confirmacion == JOptionPane.YES_OPTION) {
            // Si el usuario confirma la salida, puedes permitir que el marco se cierre
            this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            regresarPantallaPrincipal();
        } else {
            // Si el usuario cancela la salida, evita que el marco se cierre
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     *
     * Este método se encarga de formatear el texto ingresado en un campo de
     * texto para permitir solo la entrada de números y los caracteres de
     * retroceso y espacio.
     *
     * @param evt Un objeto de tipo KeyEvent que representa el evento de tecla
     * que se ha activado al ingresar texto en el campo de texto.
     */
    private void formatModeloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formatModeloKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_SPACE)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Solo se permiten números", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_formatModeloKeyTyped

    private void formatModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatModeloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formatModeloActionPerformed

    private void txtColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtColorActionPerformed

    /**
     *
     * Método que se activa cuando se escribe en el campo "formatNumeroSerie".
     * Llena los campos del formulario con la información del vehículo si éste
     * ya está registrado.
     *
     * @param evt El evento de tecla que se activa cuando se escribe en el campo
     * "formatNumeroSerie".
     */
    private void formatNumeroSerieKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formatNumeroSerieKeyTyped
        this.llenarCamposAutoRegistrado();
    }//GEN-LAST:event_formatNumeroSerieKeyTyped

    /**
     *
     * Método que se activa cuando el campo "txtMarca" gana el foco. Llena los
     * campos del formulario con la información del vehículo si éste ya está
     * registrado.
     *
     * @param evt El evento de foco que se activa cuando el campo "txtMarca"
     * gana el foco.
     */
    private void txtMarcaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMarcaFocusGained
        this.llenarCamposAutoRegistrado();
    }//GEN-LAST:event_txtMarcaFocusGained

    /**
     *
     * Este método se encarga de regresar a la pantalla principal y destruir la
     * ventana actual.
     */
    private void regresarPantallaPrincipal() {
        PrincipalForm principal = new PrincipalForm();
        principal.setVisible(true);
        dispose();
    }

    /**
     *
     * Método que valida que los campos de texto del formulario no estén vacíos
     * y que cumplan con los formatos requeridos.
     *
     * @return Una lista de cadenas de texto que contienen los nombres de los
     * campos de texto que están vacíos o no cumplen con los formatos
     * requeridos.
     */
    private List<String> validarCamposTexto() {

        List<String> camposVacios = new ArrayList<>();

        if (formatNumeroSerie.getText().isEmpty() || !formatNumeroSerie.getText().matches("[A-Z]{3}-\\d{3}")) {
            camposVacios.add("Número de serie (formato AAA-123)");
        } else {
            if (this.validarAutoRegistrado()) {
                this.llenarCamposAutoRegistrado();
            }
        }

        if (txtColor.getText().isEmpty()) {
            camposVacios.add("Color");
        }
        if (txtLinea.getText().isEmpty()) {
            camposVacios.add("Línea");
        }
        if (txtMarca.getText().isEmpty()) {
            camposVacios.add("Marca");
        }
        if (formatModelo.getText().isEmpty() || !formatModelo.getText().matches("\\d{4}")) {
            camposVacios.add("Modelo (Formato 2000)");
        }
        if (!camposVacios.isEmpty()) {
            String mensaje = "Los siguientes campos están vacíos o no cumplen con el formato requerido:\n" + String.join(", ", camposVacios);
            JOptionPane.showMessageDialog(this, mensaje, "Error", JOptionPane.ERROR_MESSAGE);
        }
        return camposVacios;
    }

    /**
     *
     * Este método se encarga de generar un objeto de la clase Vehiculo
     * utilizando los datos ingresados por el usuario en los campos
     * correspondientes.
     *
     * Los datos se obtienen de los campos de texto correspondientes en la
     * interfaz gráfica.
     *
     * @return void
     */
    private void generarObjetoVehiculo() {
        String numeroSerie = this.formatNumeroSerie.getText();
        String marca = this.txtMarca.getText();
        String linea = this.txtLinea.getText();
        String modelo = this.formatModelo.getText();
        String color = this.txtColor.getText();
        this.vehiculo = new Vehiculo(numeroSerie, marca, color, modelo, linea);
    }

    /**
     *
     * Valida si un vehículo ya ha sido registrado en la base de datos. Si el
     * vehículo ya ha sido registrado, guarda su información en el objeto
     * vehiculo y guarda la información de la placa anterior en el objeto
     * placasAntiguas.
     *
     * @return true si el vehículo ya ha sido registrado, false en caso
     * contrario.
     */
    private boolean validarAutoRegistrado() {
        this.generarObjetoVehiculo();
        List<Vehiculo> buscarVehiculo;
        buscarVehiculo = vehiculoDAO.consultarVehiculoNumeroSerie(this.vehiculo);
        if (buscarVehiculo.isEmpty()) {
            return false;
        } else {
            Placa buscarPlaca = placaDAO.consultarPlacaVehiculo(buscarVehiculo.get(0));
            this.vehiculo = buscarVehiculo.get(0);
            this.placasAntiguas = buscarPlaca;
            return true;
        }
    }

    /**
     *
     * Este método se encarga de llenar los campos correspondientes con los
     * datos del vehículo registrado, si es que los datos son válidos. Si los
     * datos no son válidos, se habilitan los campos para que el usuario pueda
     * ingresarlos.
     *
     * @return void
     */
    private void llenarCamposAutoRegistrado() {
        if (this.validarAutoRegistrado()) {
            this.txtMarca.setText(this.vehiculo.getMarca());
            this.txtMarca.enable(false);
            this.txtLinea.setText(this.vehiculo.getLinea());
            this.txtLinea.enable(false);
            this.formatModelo.setText(this.vehiculo.getModelo());
            this.formatModelo.enable(false);
            this.txtColor.setText(this.vehiculo.getColor());
            this.txtColor.enable(false);
        } else {
            if (!this.txtMarca.getText().isEmpty()) {
                this.txtMarca.setText("");
                this.txtMarca.enable(true);
            }
            if (!this.txtLinea.getText().isEmpty()) {
                this.txtLinea.setText("");
                this.txtLinea.enable(true);
            }
            if (!this.formatModelo.getText().isEmpty()) {
                this.formatModelo.setText("");
                this.formatModelo.enable(true);
            }
            if (!this.txtColor.getText().isEmpty()) {
                this.txtColor.setText("");
                this.txtColor.enable(true);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JFormattedTextField formatModelo;
    private javax.swing.JFormattedTextField formatNumeroSerie;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblDatosVehiculo;
    private javax.swing.JLabel lblLinea;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblModelo;
    private javax.swing.JLabel lblNumeroSerie;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtLinea;
    private javax.swing.JTextField txtMarca;
    // End of variables declaration//GEN-END:variables

}
